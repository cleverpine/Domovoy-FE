name: Frontend Build
on:
  push:
    branches:
      - main
      - develop
      - cicd/workflow-for-deploy-to-dev
  workflow_dispatch:  # Allows manual triggering of the workflow


jobs:
  frontend:
    runs-on: ubuntu-latest
    env:
      REGISTRY: cleverpine.azurecr.io
      IMAGE_REPOSITORY: domovoy2.0
      BUILD_DIR: ./build
      KUBE_NAMESPACE: domovoy2-dev
      RELEASE_NAME: domovoy2-dev
      

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # - name: Run linting
      #   run: npx eslint 'src/**/*.{js,jsx,ts,tsx}'

      # - name: Run unit tests
      #   run: npm test -- --watchAll=false

      # - name: Build the project
      #   env:
      #     BASE_URL: ${{ secrets.BASE_URL }}
      #   run: |
      #     echo "Building with BASE_URL=${BASE_URL}"
      #     npm run build

      # # Save build artifacts (optional)
      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: build-artifacts
      #     path: build/
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.SP_ACR_AKS_USERNAME }}
          password: ${{ secrets.SP_ACR_AKS_PASSWORD }}

      - name: Set date-based tag
        id: set-tag
        run: |
          YEAR=$(date +'%Y')
          MONTH=$(date +'%m')
          DAY=$(date +'%d')
          TAG="$YEAR$MONTH$DAY.${{ github.run_number }}"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.TAG }}

      - name: Package Helm chart
        run: |
          mkdir -p ${{ env.BUILD_DIR }}
          helm package ./chart --destination ${{ env.BUILD_DIR }}

      - name: Copy additional files
        run: |
          cp ./chart/values.*.yaml ${{ env.BUILD_DIR }}/

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: drop
          path: ${{ env.BUILD_DIR }}
          
          
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Configure AKS context
        uses: azure/aks-set-context@v4
        with:
            resource-group: internal-development
            cluster-name: internal-development-aks

      - name: Deploy Helm chart
        run: |
          helm upgrade --install ${{ env.RELEASE_NAME }} ./build/domovoy2-0.1.0.tgz \
            --namespace ${{ env.KUBE_NAMESPACE }} \
            -f ./build/values.dev.yaml \
            --set image.tag=${{ env.TAG }}
          